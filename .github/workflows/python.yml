# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build, test, and Push to PyPI

on:
  push:

permissions:
  contents: read

jobs:
  linux:
    name: linux_compile
    runs-on: ubuntu-latest
#    container: quay.io/pypa/manylinux_2_28_x86_64 
    strategy:
      matrix:
        python-version: ['3.11']
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Add conda to system path
      run: |
        # $CONDA is an environment variable pointing to the root of the miniconda directory
        echo $CONDA/bin >> $GITHUB_PATH
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        conda install boost tbb tbb-devel numpy gudhi cython pytest -c conda-forge
        pip install pykeops filtration-domination
    - name: Build package
      run: |
        python setup.py sdist
        python setup.py build_ext -j2 --inplace
        # Need to configure manylinux for this...
        # pip wheel . --wheel-dir dist
        # auditwheel repair -w dist dist/*.whl
    - name: Tests
      run: |
        pytest multipers/tests
    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: dist
  
  send_to_pypi:
    name: Release
    runs-on: ubuntu-latest
    needs: [ linux ]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: |
          pip install --upgrade pip twine
          twine upload --skip-existing *
          
